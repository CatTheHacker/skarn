            <div class="ui segment">
                <h2 class="ui header">{{title}}</h2>
                <p>{{data.tagline}}</p>
                {{#equal page "open"}}
                <table class="ui celled single line compact table">
                    <thead>
                        <th data-sort-method="number" data-sort-default=""></th>
                        <th data-sort-method="none">Title</th>
                        <th data-sort-method="none">Quality</th>
                        <th data-sort-method="none">Reference</th>
                        <th data-sort-method="number">Points</th>
                        <th data-sort-method="none">Requester</th>
                        <th data-sort-method="none">Fill</th>
                    </thead>
                    <tbody>
                        {{#each data.requests}}
                        <tr data-id="{{ID}}">
                            <td data-sort="{{ID}}.2" class="a {{#if Filled}}positive{{else}}negative{{/if}} center aligned collapsing"><i class="icon {{icon Category}}"></i></td>
                            <td class="b">
                                <div>{{Title}}</div>
                                <div>{{Description}}</div>
                            </td>
                            <td class="c">{{#each Quality}}<div class="ui label">{{quality Category this}}</div>{{/each}}</td>
                            <td class="d"><a target="_blank" href="{{Link}}">{{domain Link}}</a> <i class="external alternate icon"></i></td>
                            <td class="e">
                                {{#if user.IsAdmin}}
                                <div class="ui label">
                                    <i class="arrows alternate vertical icon"></i>
                                    <span>{{Points}}</span>
                                </div>
                                {{else}}
                                <span>{{Points}}</span>
                                {{/if}}
                            </td>
                            <td class="f"><i class="user icon"></i> {{name Owner}}</td>
                            <td class="g">{{#unless Filled}}<button class="ui button">Fill</button>{{/unless}}</td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
                {{/equal}}
                {{#equal page "mine"}}
                <div class="ui top attached tabular menu">
                    <div class="active item" data-tab="open">Open</div>
                    <div class="item"data-tab="filled">Filled</div>
                </div>
                <div class="ui bottom attached active tab segment" data-tab="open">
                    <table class="ui celled single line compact table">
                        <thead>
                            <th data-sort-method="number" data-sort-default=""></th>
                            <th data-sort-method="none">Title</th>
                            <th data-sort-method="none">Quality</th>
                            <th data-sort-method="none">Reference</th>
                            <th data-sort-method="number">Points</th>
                            <th data-sort-method="none">Requester</th>
                            <th data-sort-method="none">Fill</th>
                            <th data-sort-method="none">Delete</th>
                        </thead>
                        <tbody>
                            {{#each data.requests}}
                            {{#unless Filled}}
                            <tr data-id="{{ID}}">
                                <td class="" data-sort="{{ID}}.2" class="a {{#if Filled}}positive{{else}}negative{{/if}} center aligned collapsing"><i class="icon {{icon Category}}"></i></td>
                                <td class="b">
                                    <div>{{Title}}</div>
                                    <div>{{Description}}</div>
                                </td>
                                <td class="c">{{#each Quality}}<div class="ui label">{{quality Category this}}</div>{{/each}}</td>
                                <td class="d"><a target="_blank" href="{{Link}}">{{domain Link}}</a> <i class="external alternate icon"></i></td>
                                <td class="e">
                                    {{#if user.IsAdmin}}
                                    <div class="ui label">
                                        <i class="arrows alternate vertical icon"></i>
                                        <span>{{Points}}</span>
                                    </div>
                                    {{else}}
                                    <span>{{Points}}</span>
                                    {{/if}}
                                </td>
                                <td class="f"><i class="user icon"></i> {{name Owner}}</td>
                                <td class="g">{{#unless Filled}}<button class="ui button">Fill</button>{{/unless}}</td>
                                <td class="i">{{#equal Owner user.ID}}<a class="ui button"><i class="trash icon"></a>{{/equal}}</td>
                            </tr>
                            {{/unless}}
                            {{/each}}
                        </tbody>
                    </table>
                </div>
                <div class="ui bottom attached tab segment" data-tab="filled">
                    <table class="ui celled single line compact table">
                        <thead>
                            <th data-sort-method="number" data-sort-default=""></th>
                            <th data-sort-method="none">Title</th>
                            <th data-sort-method="none">Quality</th>
                            <th data-sort-method="none">Reference</th>
                            <th data-sort-method="number">Points</th>
                            <th data-sort-method="none">Requester</th>
                            <th data-sort-method="none">Unfill</th>
                            <th data-sort-method="none">Delete</th>
                        </thead>
                        <tbody>
                            {{#each data.requests}}
                            {{#if Filled}}
                            <tr data-id="{{ID}}">
                                <td class="" data-sort="{{ID}}.2" class="a {{#if Filled}}positive{{else}}negative{{/if}} center aligned collapsing"><i class="icon {{icon Category}}"></i></td>
                                <td class="b">
                                    <div>{{Title}}</div>
                                    <div>{{Description}}</div>
                                </td>
                                <td class="c">{{#each Quality}}<div class="ui label">{{quality Category this}}</div>{{/each}}</td>
                                <td class="d"><a target="_blank" href="{{Link}}">{{domain Link}}</a> <i class="external alternate icon"></i></td>
                                <td class="e">
                                    {{#if user.IsAdmin}}
                                    <div class="ui label">
                                        <i class="arrows alternate vertical icon"></i>
                                        <span>{{Points}}</span>
                                    </div>
                                    {{else}}
                                    <span>{{Points}}</span>
                                    {{/if}}
                                </td>
                                <td class="f"><i class="user icon"></i> {{name Owner}}</td>
                                <td class="h">{{#equal Owner user.ID}}{{#if Filled}}<a class="ui button"><i class="undo icon"></i></a>{{/if}}{{/equal}}</td>
                                <td class="i">{{#equal Owner user.ID}}<a class="ui button"><i class="trash icon"></a>{{/equal}}</td>
                            </tr>
                            <tr class="fill-desc">
                                <td data-sort="{{ID}}.1"><i class="angle double right icon"></i></td>
                                <td colspan="3">{{Response}}</td>
                                <td></td>
                                <td colspan="4">Filled by <i class="user icon"></i> {{name Filler}}</td>
                            </tr>
                            {{/if}}
                            {{/each}}
                        </tbody>
                    </table>
                </div>
                {{/equal}}
            </div>
        </div>
        <style>
            .table tbody tr td:nth-child(1) i.icon { font-size: 2em; }
            .table tbody tr td:nth-child(2) { white-space: normal; }
            .table tbody tr td:nth-child(2) div:nth-child(1) { font-weight: bold; }
            .table tbody tr td:nth-child(6) div.label { cursor: ns-resize; }
            .ui.table > tbody > tr.fill-desc > td { padding: 0 .5em; }
        </style>
        <script>
            // @see https://ctrlq.org/code/20294-regex-extract-links-javascript
            function createTextLinks_(text) {
                return (text || "").replace(/([^\S]|^)(((https?\:\/\/)|(www\.))(\S+))/gi, (match, space, url) => {
                    let hyperlink = url;
                    if (!hyperlink.match("^https?:\/\/")) {
                        hyperlink = "http://" + hyperlink;
                    }
                    return space + `<a target="_blank" href="${hyperlink}">${url}</a>`;
                });
            }
            //
            (function() {
                class C_SP {
                    constructor() { this.data = new URLSearchParams(); }
                    add(key, value) { this.data.append(key, value); return this; }
                }
                class C_H {
                    constructor() { this.data = new Headers(); }
                    add(key, value) { this.data.append(key, value); return this; }
                }
                $(document).ready(function() {
                    Array.from(document.querySelectorAll("table")).forEach(function(t) {
                        new Tablesort(t, {
                            descending: true,
                        })
                    })
                });
                //
                $(".tabular.menu .item").tab();
                //
                $(document).ready(function() {
                    $("tr td:nth-child(5) div.label").on("wheel", function(ev) {
                        const y = ev.originalEvent.deltaY;
                        const s = -Math.sign(y);
                        const r = parseInt(this.children[1].textContent);
                        const v = Math.max(0, r + s);
                        this.children[1].textContent = v.toString();
                        const i = this.parentElement.parentElement.dataset.id;
                        //
                        fetch("./api/request/update_score", {
                            method:"POST",
                            credentials: "include",
                            headers: new C_H().add("Content-Type", "application/x-www-form-urlencoded").data,
                            body: new C_SP().add("id", i).add("score", v).data.toString(),
                        });
                    });
                    $("tr td:nth-child(7) button").on("click", function(ev) {
                        const rid = this.parentElement.parentElement.dataset.id;
                        Swal.fire({
                            input: "text",
                            title: "Fill this Request",
                            inputPlaceholder: "Send the requester a message",
                            inputValidator: (value) => { if (!value) { return "You need to write something!" } },
                        })
                        .then(x => {
                            if (x.value !== undefined) {
                                return fetch("./api/request/fill", {
                                    method: "POST",
                                    credentials: "include",
                                    headers: new C_H().add("Content-Type", "application/x-www-form-urlencoded").data,
                                    body: new C_SP().add("id", rid).add("message", x.value).data.toString(),
                                })
                                .then(x => this.parentElement.parentElement.remove())
                            }
                        })
                    });
                    $("tr td:nth-child(8) .button").on("click", function(ev) {
                        const rid = this.parentElement.parentElement.dataset.id;
                        Swal.fire({ title: "Are you sure?", text: "You won't be able to revert this!", type: "warning", showCancelButton: true, confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Yes" })
                        .then((result) => result.value ? Promise.resolve('y') : Promise.reject('n'))
                        .then(x => fetch("./api/request/unfill", {
                            method: "POST",
                            credentials: "include",
                            headers: new C_H().add("Content-Type", "application/x-www-form-urlencoded").data,
                            body: new C_SP().add("id", rid).add("message", x.value).data.toString(),
                        }))
                        .then(x => location.reload())
                        .catch(x => {});
                    });
                    $("tr td:nth-child(9) .button").on("click", function(ev) {
                        const rid = this.parentElement.parentElement.dataset.id;
                        Swal.fire({ title: "Are you sure?", text: "You won't be able to revert this!", type: "warning", showCancelButton: true, confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Yes" })
                        .then((result) => result.value ? Promise.resolve('y') : Promise.reject('n'))
                        .then(x => fetch("./api/request/delete", {
                            method: "POST",
                            credentials: "include",
                            headers: new C_H().add("Content-Type", "application/x-www-form-urlencoded").data,
                            body: new C_SP().add("id", rid).add("message", x.value).data.toString(),
                        }))
                        .then(x => location.reload())
                        .catch(x => {});
                    });
                    $("tr.fill-desc").each((i,e) => {
                        const el = e.children[1]
                        el.innerHTML = createTextLinks_(e.children[1].textContent);
                    });
                });
            })();
        </script>
    </body>
</html>
